# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import klima_pb2 as klima__pb2


class AirConditionerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SetState = channel.unary_unary(
        '/acremote.AirConditioner/SetState',
        request_serializer=klima__pb2.StateRequest.SerializeToString,
        response_deserializer=klima__pb2.StateResponse.FromString,
        )
    self.GetState = channel.unary_unary(
        '/acremote.AirConditioner/GetState',
        request_serializer=klima__pb2.Void.SerializeToString,
        response_deserializer=klima__pb2.StateResponse.FromString,
        )


class AirConditionerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SetState(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetState(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AirConditionerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SetState': grpc.unary_unary_rpc_method_handler(
          servicer.SetState,
          request_deserializer=klima__pb2.StateRequest.FromString,
          response_serializer=klima__pb2.StateResponse.SerializeToString,
      ),
      'GetState': grpc.unary_unary_rpc_method_handler(
          servicer.GetState,
          request_deserializer=klima__pb2.Void.FromString,
          response_serializer=klima__pb2.StateResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'acremote.AirConditioner', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
